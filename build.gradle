plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.hibernate.orm' version '6.5.3.Final'
	id 'org.graalvm.buildtools.native' version '0.10.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}


// graalvm configurations
graalvmNative {
     binaries {
         main {
             javaLauncher = javaToolchains.launcherFor {
                 languageVersion = JavaLanguageVersion.of(17)
                 vendor = JvmVendorSpec.matching("GraalVM Community")
             }
         }
     }
 }

 graalvmNative {
     binaries.all {
         resources.autodetect()
     }
     toolchainDetection = false
 }

// graalvmNative {
//     binaries {
//         main {
//             imageName = 'adventure_works_search'
//             mainClass = 'com.example.AdventureWorksSearchApplication'  // Replace with your actual main class
//             buildArgs = ['--no-fallback']
//         }
//     }
// }

tasks.named('test') {
	useJUnitPlatform()
}
